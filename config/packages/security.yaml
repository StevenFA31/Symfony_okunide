security:
  # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
  password_hashers:
    App\Entity\User: "auto"
    App\Entity\Administrator: "auto"
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
      algorithm: "auto"
      cost: 15
  # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
  providers:
    # used to reload user from session & other features (e.g. switch_user)
    app_user_provider:
      entity:
        class: App\Entity\User
        property: email
    app_admin_provider:
      entity:
        class: App\Entity\Admin
        property: email
    chain_provider:
      chain:
        providers: [app_admin_provider, app_user_provider]

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    admin_secure_area:
      pattern: ^/admin/
      provider: app_admin_provider
      custom_authenticator: App\Security\AppAdminControllerAuthenticator
      entry_point: form_login
      form_login:
        login_path: admin_login
        check_path: admin_login
        default_target_path: app_admin
        username_parameter: login[email]
        password_parameter: login[password]
        enable_csrf: true
      logout:
        path: admin_logout
        target: admin_login
        invalidate_session: true

    user_secure_area:
      pattern: ^/user/
      provider: app_user_provider
      custom_authenticator: App\Security\AppUserAuthenticator
      entry_point: form_login
      form_login:
        login_path: user_login
        check_path: user_login
        default_target_path: app_account
        username_parameter: login[email]
        password_parameter: login[password]
        enable_csrf: true
      logout:
        path: user_logout
        target: user_login
        invalidate_session: true

    main:
      lazy: true
      pattern: ^/
      provider: app_user_provider

      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#the-firewall

      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  role_hierarchy:
    ROLE_CLIENT: ROLE_USER
    ROLE_ADMIN: ROLE_USER
    ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_CLIENT, ROLE_ALLOWED_TO_SWITCH]

  access_control:
    - { path: ^/admin/login, roles: PUBLIC_ACCESS }
    - { path: ^/user/login, roles: PUBLIC_ACCESS }
    - { path: ^/admin/, roles: ROLE_ADMIN }
    - { path: ^/user, roles: ROLE_CLIENT }

when@test:
  security:
    password_hashers:
      # By default, password hashers are resource intensive and take time. This is
      # important to generate secure password hashes. In tests however, secure hashes
      # are not important, waste resources and increase test times. The following
      # reduces the work factor to the lowest possible values.
      Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
        algorithm: auto
        cost: 4 # Lowest possible value for bcrypt
        time_cost: 3 # Lowest possible value for argon
        memory_cost: 10 # Lowest possible value for argon
